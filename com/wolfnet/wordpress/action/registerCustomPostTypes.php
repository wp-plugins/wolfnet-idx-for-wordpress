<?php

/**
 * This action is responsible for enqueuing any resources such as JavaScript and CSS that are
 * needed for any code generated by the plugin in public ares of the site.
 *
 * @package       com.wolfnet.wordpress
 * @subpackage    action
 * @title         registerCustomPostTypes.php
 * @extends       com_greentiedev_wppf_action_action
 * @contributors  AJ Michels (aj.michels@wolfnet.com)
 * @version       1.0
 * @copyright     Copyright (c) 2012, WolfNet Technologies, LLC
 *
 *                This program is free software; you can redistribute it and/or
 *                modify it under the terms of the GNU General Public License
 *                as published by the Free Software Foundation; either version 2
 *                of the License, or (at your option) any later version.
 *
 *                This program is distributed in the hope that it will be useful,
 *                but WITHOUT ANY WARRANTY; without even the implied warranty of
 *                MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *                GNU General Public License for more details.
 *
 *                You should have received a copy of the GNU General Public License
 *                along with this program; if not, write to the Free Software
 *                Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */
class com_wolfnet_wordpress_action_registerCustomPostTypes
extends com_greentiedev_wppf_action_action
{


	const WOLFNET_SEARCH_POST = 'wolfnet_search';


	/* PUBLIC METHODS *************************************************************************** */

	/**
	 * This method is executed by the ActionManager when any hooks that this action is registered to
	 * are encountered.  It is currently handling the following resources: wolfnet.min.js,
	 * jquery.filmStrip.min.js, and wolfnet.min.css.
	 *
	 * @return  void
	 *
	 */
	public function execute ()
	{
		if ( !post_type_exists( self::WOLFNET_SEARCH_POST ) ) {

			$search_post_args = array(
				'public'    => false,
				'show_ui'   => false,
				'query_var' => self::WOLFNET_SEARCH_POST,
				'rewrite'   => array(
					'slug'       => 'wolfnet/search',
					'with_front' => false
				),
				'supports'  => array( 'title' ),
				'labels'    => array(
					'name'               => 'Saved Searches',
					'singular_name'      => 'Saved Search',
					'add_new'            => 'Add Search',
					'add_new_item'       => 'Add Search',
					'edit_item'          => 'View Saved Search',
					'new_item'           => 'New Saved Search',
					'view_item'          => 'View Saved Searches',
					'search_items'       => 'Find Saved Searches',
					'not_found'          => 'No Saved Searches',
					'not_found_in_trash' => 'No Saved Searches In Trash'
				),
				'register_meta_box_cb' => array( &$this, 'searchPostMetabox' )

			);

			register_post_type( self::WOLFNET_SEARCH_POST, $search_post_args );

		}


	}


	public function searchPostMetabox ()
	{
		add_meta_box(
			'search_criteria',
			'Search Criteria',
			array( &$this, 'searchPostMetaboxOutput' ),
			self::WOLFNET_SEARCH_POST,
			'advanced',
			'core'
		);
	}


	public function searchPostMetaboxOutput ( $post )
	{
		$customFields = get_post_custom( $post->ID );

		foreach ( $customFields as $field => $value ) {

			if ( substr( $field, 0, 1 ) != '_' ) {
				echo "<div><label>{$field}:</label> {$value[0]}</div>";
			}

		}

	}


}
